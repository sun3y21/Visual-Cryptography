
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Sunnny
 */
public class ShareCombiner extends javax.swing.JFrame {

    File files[];
    int startX,startY;
    /**
     * Creates new form ShareCombiner
     */
    public ShareCombiner() {
        initComponents();
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setAcceptAllFileFilterUsed(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        choosenFile = new javax.swing.JTextArea();
        merger = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Welcome to Share Combiner");

        fileChooser.setApproveButtonMnemonic(1);
        fileChooser.setApproveButtonText("Select");
        fileChooser.setApproveButtonToolTipText("");
        fileChooser.setForeground(new java.awt.Color(255, 255, 102));
        fileChooser.setToolTipText("");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        choosenFile.setColumns(20);
        choosenFile.setRows(5);
        jScrollPane1.setViewportView(choosenFile);

        merger.setText("Decrypt");
        merger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergerActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(merger, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(merger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        this.dispose();
        VCSecure vCSecure=new VCSecure();
        vCSecure.setVisible(true);
    }//GEN-LAST:event_exitActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        choosenFile.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void mergerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergerActionPerformed
        try 
        {
           if(files!=null){
               if(files.length==1)
               {
                   JOptionPane.showMessageDialog(this,"Number of share selected must be greater than 1.","Error",0);
               }
               else
               {
                   try
                   {
                       ArrayList<BufferedImage> shares=new ArrayList<>();
                       for(File f:files)
                       {
                           shares.add(ImageIO.read(f));
                       }
                       
                       int max=0;
                       boolean flag=false;
                       for(int i=1;i<shares.size();i++)
                       {
                           if(shares.get(i).getHeight()>shares.get(max).getHeight())
                           {
                               max=i;
                           }
                           else if(shares.get(i).getHeight()==shares.get(max).getHeight())
                           {
                               flag=true;
                           }
                       }
                       
                       
                       int startX=shares.get(max).getRGB(0,0);
                       int startY=shares.get(max).getRGB(shares.get(max).getWidth()-1,0);
                       
                       if(flag)
                       {
                           startX=0;
                           startY=0;
                       }
                       int k=0;
                       if(max==0)
                       {
                           k=1;
                       }
                       
                       for(int i=0;i<shares.get(k).getHeight();i++)
                       {
                           for(int j=0;j<shares.get(k).getWidth();j++)
                           {
                                int temp=0;
                                for(int p=0;p<shares.size();p++)
                                {
                                    if(p==max)
                                    {
                                        temp=temp|shares.get(p).getRGB(startX+j,startY+i);
                                    }
                                    else
                                    {
                                        temp=temp|shares.get(p).getRGB(j,i);
                                    }
                                }
                                shares.get(max).setRGB(startX+j,startY+i,temp);
                           }
                       }
                       
                       ImageIO.write(shares.get(max),"PNG",new File("output.png"));
                       JOptionPane.showMessageDialog(this,"Shares decrypted successfully. See output.png.","Success",1);
                       choosenFile.setText(choosenFile.getText()+"\nOutput file output.png generated successfully.");
                       OutputImage outImage=new OutputImage(shares.get(max));
                       outImage.setVisible(true);
                   }
                   catch(Exception e){
                       System.out.println(e.getMessage());
                   }
               }
           }
           else{
               JOptionPane.showMessageDialog(this,"No share file selected.","Error",0);
           }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_mergerActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        
        if(evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION))
        {
            files=fileChooser.getSelectedFiles();
            String output="Selected files:\n";
            for(File f:files)
            {
                output+=f.getName()+"\n";
            }
            choosenFile.setText(output);
        }
        else
        {
            choosenFile.setText("No share selected.");
        }
    }//GEN-LAST:event_fileChooserActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        VCSecure vCSecure=new VCSecure();
        vCSecure.setVisible(true);
    }//GEN-LAST:event_formWindowClosed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea choosenFile;
    private javax.swing.JButton clear;
    private javax.swing.JButton exit;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton merger;
    // End of variables declaration//GEN-END:variables
}
